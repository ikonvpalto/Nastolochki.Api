// <auto-generated />
using System;
using Kvpbldsck.NastolochkiAPI.Events.Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Kvpbldsck.NastolochkiAPI.Events.Api.Database.Migrations
{
    [DbContext(typeof(EventsDbContext))]
    [Migration("20220322163659_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Kvpbldsck.NastolochkiAPI.Events.Api.Models.Event", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("Description");

                    b.Property<Guid>("LocationGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Name");

                    b.HasKey("Guid")
                        .HasName("PK_Event");

                    b.HasIndex("LocationGuid");

                    b.ToTable("Events", (string)null);
                });

            modelBuilder.Entity("Kvpbldsck.NastolochkiAPI.Events.Api.Models.EventParticipant", b =>
                {
                    b.Property<Guid>("EventGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("EventGuid");

                    b.Property<Guid>("ParticipantGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("ParticipantGuid");

                    b.HasKey("EventGuid", "ParticipantGuid")
                        .HasName("PK_EventParticipant");

                    b.ToTable("EventParticipants", (string)null);
                });

            modelBuilder.Entity("Kvpbldsck.NastolochkiAPI.Events.Api.Models.EventTimeVariant", b =>
                {
                    b.Property<Guid>("EventGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("EventGuid");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp")
                        .HasColumnName("Time");

                    b.HasKey("EventGuid", "Time")
                        .HasName("PK_EventTimeVariant");

                    b.ToTable("EventTimeVariants", (string)null);
                });

            modelBuilder.Entity("Kvpbldsck.NastolochkiAPI.Events.Api.Models.Location", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("Address");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("Name");

                    b.HasKey("Guid")
                        .HasName("PK_Location");

                    b.ToTable("Locations", (string)null);
                });

            modelBuilder.Entity("Kvpbldsck.NastolochkiAPI.Events.Api.Models.Event", b =>
                {
                    b.HasOne("Kvpbldsck.NastolochkiAPI.Events.Api.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Kvpbldsck.NastolochkiAPI.Events.Api.Models.EventParticipant", b =>
                {
                    b.HasOne("Kvpbldsck.NastolochkiAPI.Events.Api.Models.Event", null)
                        .WithMany("Participants")
                        .HasForeignKey("EventGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Kvpbldsck.NastolochkiAPI.Events.Api.Models.EventTimeVariant", b =>
                {
                    b.HasOne("Kvpbldsck.NastolochkiAPI.Events.Api.Models.Event", null)
                        .WithMany("TimeVariants")
                        .HasForeignKey("EventGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Kvpbldsck.NastolochkiAPI.Events.Api.Models.Event", b =>
                {
                    b.Navigation("Participants");

                    b.Navigation("TimeVariants");
                });
#pragma warning restore 612, 618
        }
    }
}
